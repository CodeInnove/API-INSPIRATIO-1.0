import { Schema, Document } from 'mongoose';
import { IAnamnesisSpeechTherapy } from 'src/features/anamnesis-speech-therapy/types/anamnesisSpeechTherapy';

export const AnamnesisSpeechTherapySchema = new Schema({
  _id: { type: Schema.Types.ObjectId, required: true, auto: true },
  doctor: {type: Schema.Types.ObjectId, required: true, ref: "User"},
  patient: {type: Schema.Types.ObjectId, required: true, ref: "User"},
  birthDate: {type: Schema.Types.ObjectId, required: true, ref: "User"},
  maritalStatus: {type: String},
  placeOfBirth: {type: String},
  age: {type: Number},
  sex: {type: String, enum: ['M', 'F']},
  nationality: {type: Schema.Types.ObjectId, required: true, ref: "User"},
  schoolName: {type: String},
  studyPeriod: {type: String},
  fatherName: {type: String},
  fatherAge: {type: Number},
  fatherProfession: {type: String},
  fatherEducation: {type: String},
  motherName: {type: String},
  motherAge: {type: Number},
  motherProfession: {type: String},
  motherEducation: {type: String},
  siblingsNamesOne: {type: String},
  ageSiblingsNamesOne: {type: Number},
  siblingsNamesTwo: {type: String},
  ageSiblingsNamesTwo: {type: Number},
  complaintAndDuration: { type: String },
  backgorund: {
    gestation: { type: String },
    typeOfDelivery: { type: String },
    complications: { type: String },
    usedMedication: { type: String, enum: ['Sim', 'Não'] },
    medicalGuidance: { type: String, enum: ['Sim', 'Não'] },
    whichMedication: { type: String },
    prenatalCare: { type: String, enum: ['Sim', 'Não'] },
    prenatalCareWhy: { type: String },
    childProblem: { type: String, enum: ['Sim', 'Não'] },
    whichProblem: { type: String },
    parentsWorkHours: { type: String },
    childCaregiver: { type: String },
    weeklyRoutine: { type: String },
  },

  physycal: {
    sleep: { type: String },
    disease: { type: String },
    hearingEarInfection: { type: String },
    vision: { type: String },
    allergies: { type: String },
    surgeriesAndDates: { type: String },
    hospitalizations: { type: String },
    medication: { type: String },
    breastfed: { type: String, enum: ['Sim', 'Não'] },
    untilWhen: { type: String },
    lookedAtMotherBreastfeeding: { type: String, enum: ['Sim', 'Não'] },
    whatEatsNow: { type: String },
    chokedEasily: { type: String, enum: ['Sim', 'Não'] },
    gastroesophagealReflux: { type: String, enum: ['Sim', 'Não'] },
    usedBottle: { type: String, enum: ['Sim', 'Não'] },
    whenStartedUsingBottle: { type: String },
    forHowLongUsedBottle: { type: String },
    whenChangedFromLiquidToPastyFoods: { type: String },
    pastyToSolidFoods: { type: String },
    fever: { type: String },
    fainting: { type: String },
    convulsions: { type: String },
    otherProblems: { type: String },
    heldHeadUp: { type: String },
    satWithSupport: { type: String, enum: ['Sim', 'Não'] },
    satWithoutSupport: { type: String, enum: ['Sim', 'Não'] },
    crawled: { type: String, enum: ['Sim', 'Não'] },
    walked: { type: String, enum: ['Sim', 'Não'] },
    diurnalSphincterControl: { type: String },
    nocturnalSphincterControl: { type: String },
    fellALot: { type: String, enum: ['Sim', 'Não'] },
    bumpedIntoThings: { type: String, enum: ['Sim', 'Não'] },
    speechBabblingWhen: { type: String },
    quietBaby: { type: String },
    suction: { type: String },
    chewing: { type: String },
    swallowing: { type: String },
    breathing: { type: String },
    presentsNoise: { type: String, enum: ['Sim', 'Não'] },
    effort: { type: String, enum: ['Sim', 'Não'] },
    leftOrRightHanded: { type: String, enum: ['Direita', 'Esquerda'] },
    usedPacifierBottleFinger: {
      type: String,
      enum: ['Chupeta', 'Mamadeira', 'Dedo'],
    },
    untilWhenUsedPacifierBottleFinger: { type: String },
    otherHabits: { type: String },
    bathesAlone: { type: String, enum: ['Sim', 'Não', 'As vezes'] },
    eatsAlone: { type: String, enum: ['Sim', 'Não', 'As vezes'] },
    sinceWhenEatsAlone: { type: String },
    whatDoesItUse: { type: String },
    whichHandEatsWith: { type: String },
    playsBall: { type: String, enum: ['Sim', 'Não', 'As vezes'] },
    jumpsRope: { type: String, enum: ['Sim', 'Não', 'As vezes'] },
    brushesTeethAlone: { type: String, enum: ['Sim', 'Não', 'As vezes'] },
    dressesAlone: { type: String, enum: ['Sim', 'Não', 'As vezes'] },
    putsOnShoes: { type: String, enum: ['Sim', 'Não', 'As vezes'] },
    tiesShoes: { type: String, enum: ['Sim', 'Não', 'As vezes'] },
    closesZipper: { type: String, enum: ['Sim', 'Não', 'As vezes'] },
    hasOwnInitiative: { type: String, enum: ['Sim', 'Não', 'As vezes'] },
    demonstratesWishes: { type: String, enum: ['Sim', 'Não', 'As vezes'] },
    whatDoesWhenAlone: { type: String },
    howSolvesProblems: { type: String },
  },

  socioCultural: {
    relationshipWithParents: { type: String },
    relationshipWithAdults: { type: String },
    relationshipWithOtherChildren: { type: String },
    whoAreYourBestFriends: { type: String },
    whatLikes: { type: String },
    muchChargedToSpeakCorrectly: { type: String },
    familyWithSpeechDifficulty: { type: String },
    difficultyOfUnderstanding: { type: String },
    hasVisualContact: { type: String },
    bitesOtherChildrenAggressive: { type: String },
    communicationInitiative: { type: String },
    maintainsDialogue: { type: String },
    hasContactWithWhatLikes: { type: String },
    doesntLike: { type: String },
    hasGoodSchoolPerformance: { type: String },
    whenStartedSchool: { type: String },
    hadGoodAdaptation: { type: String },
    howIsTheirBehavior: { type: String },
    answersByName: { type: String },
  },

  importantObservation: { type: String },
});


export interface IAnamnesisSpeechTherapyEntity extends Omit<IAnamnesisSpeechTherapy, '_id'>, Document {}
