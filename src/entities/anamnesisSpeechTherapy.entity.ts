import { Schema, Document } from 'mongoose';
import { IAnamnesisSpeechTherapy } from 'src/features/anamnesis-speech-therapy/types/anamnesisSpeechTherapy';


export const AnamnesisSpeechTherapySchema = new Schema({

    _id: { type: Schema.Types.ObjectId, required: true, auto: true },
    
    //identification: {
        //patient: {type: Schema.Types.ObjectId, required: true, ref: "Patient"},
        //birthDate: {type: Schema.Types.ObjectId, required: true, ref: "Patient"},
        //maritalStatus: {type: String},
        //placeOfBirth: {type: String},
        //age: {type: Number},
        //sex: {type: Schema.Types.ObjectId, required: true, ref: "Patient"},
        //nationality: {type: Schema.Types.ObjectId, required: true, ref: "Patient"},
        //schoolName: {type: String},
        //studyPeriod: {type: String},
      //},
      //affiliation: {
        //fatherName: {type: Schema.Types.ObjectId, required: true, ref: "User"},
        //fatherAge: {type: Number},
        //fatherProfession: {type: String},
        //fatherEducation: {type: String},
        //motherName: {type: Schema.Types.ObjectId, required: true, ref: "User"},
        //motherAge: {type: Number},
        //motherProfession: {type: String},
        //motherEducation: {type: String},
        //siblingsNamesOne: {type: String},
        //ageSiblingsNamesOne: {type: Number},
        //siblingsNamesTwo: {type: String},
        //ageSiblingsNamesTwo: {type: Number},
      //},
      //address: {
        //street: {type: String},
        //city: {type: String},
        //number: {type: String},
        //state: {type: String},
        //zipCode: {type: String},
        //phoneNumbers: {type: String},
        //responsible: {type: String},
        //referredBy: {type: String},
        //anamnesisDate: {type: String},
        //professional: {type: Schema.Types.ObjectId, ref: "User"},
      //},
      complaintAndDuration: String,
      antecedents: {
        constitutional: {
          gestation: {type: String},
          typeOfDelivery: {type: String},
          complications: {type: String},
          usedMedication: {type: String, enum: ['Sim', 'Não']},
           medicalGuidance: {type: String, enum: ['Sim', 'Não']},
            whichMedication: {type: String},
            prenatalCare: {type: String, enum: ['Sim', 'Não']},
            prenatalCareWhy: {type: String},
            childProblem: {type: String, enum: ['Sim', 'Não']},
            whichProblem: {type: String},
          },
        },
        circumstantial: {
            parentsWorkHours: {type: String},
            childCaregiver: {type: String},
            weeklyRoutine: {type: String},
        },
      development: {
        physical: {
          somatic: {
            sleep: {type: String},
            disease: {type: String},
            hearingEarInfection: {type: String},
            vision: {type: String},
            allergies: {type: String},
            surgeriesAndDates: {type: String},
            hospitalizations: {type: String},
            medication: {type: String},
            breastfed: {type: String, enum: ['Sim', 'Não']},
            untilWhen: {type: String},
            lookedAtMotherBreastfeeding: {type: String, enum: ['Sim', 'Não']},
            whatEatsNow: {type: String},
            chokedEasily: {type: String, enum: ['Sim', 'Não']},
            gastroesophagealReflux: {type: String, enum: ['Sim', 'Não']},
            usedBottle: {type: String, enum: ['Sim', 'Não']},
            whenStartedUsingBottle: {type: String},
            forHowLongUsedBottle: {type: String},
            whenChangedFromLiquidToPastyFoods: {type: String},
            pastyToSolidFoods: {type: String},
            fever: {type: String},
            fainting: {type: String},
            convulsions: {type: String},
            otherProblems: {type: String},
          },
          motor: {
            heldHeadUp: {type: String},
              satWithSupport: {type: String},
              satWithoutSupport: {type: String},
              crawled: {type: String},
              walked: {type: String},
              diurnalSphincterControl: {type: String},
              nocturnalSphincterControl: {type: String},
              fellALot: {type: String},
              bumpedIntoThings: {type: String},
              speechBabblingWhen: {type: String},
              quietBaby: {type: String},
          },
        },
        neurovegetativeFunctions: {
            suction: {type: String},
            chewing: {type: String},
            swallowing: {type: String},
            breathing: {type: String},
            presentsNoise: {type: String},
            effort: {type: String},
            leftOrRightHanded: {type: String, enum: ['Direita', 'Esquerda']},
            usedPacifierBottleFinger: {type: String, enum: ['Chupeta', 'Mamadeira', 'Dedo']},
            untilWhenUsed: {type: String},
            otherHabits: {type: String},
        },
        ideomotor: {
            bathesAlone: {type: String},
            eatsAlone: {type: String},
            sinceWhenEatsAlone: {type: String},
            whatDoesItUse: {type: String},
            whichHandEatsWith: {type: String},
            playsBall: {type: String},
            jumpsRope: {type: String},
            brushesTeethAlone: {type: String},
            dressesAlone: {type: String},
            putsOnShoes: {type: String},
            tiesShoes: {type: String},
            closesZipper: {type: String},
        },
          ideatory: {
            hasOwnInitiative: {type: String},
            demonstratesWishes: {type: String},
            whatDoesWhenAlone: {type: String},
            howSolvesProblems: {type: String},
          }
      },
        socioCultural:{
          interactive:{
          relationshipWithParents: {type: String},
          relationshipWithAdults: {type: String},
          relationshipWithOtherChildren: {type: String},
          whoAreYourBestFriends: {type: String},
        },
        integrative:{
            whatLikes: {type: String},
            muchChargedToSpeakCorrectly: {type: String},
            familyWithSpeechDifficulty: {type: String},
            difficultyOfUnderstanding: {type: String},
            hasVisualContact: {type: String},
            bitesOtherChildrenAggressive: {type: String},
            communicationInitiative: {type: String},
            maintainsDialogue: {type: String},
            hasContactWithWhatLikes: {type: String},
            doesntLike: {type: String},
            hasGoodSchoolPerformance: {type: String},
            whenStartedSchool: {type: String},
            hadGoodAdaptation: {type: String},
            howIsTheirBehavior: {type: String},
            answersByName: {type: String},
          }
        },
        importantObservations:  {type: String},
    });
    

export interface IAnamnesisSpeechTherapyEntity extends Omit<IAnamnesisSpeechTherapy, '_id'>, Document { }